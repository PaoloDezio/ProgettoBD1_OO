--Creazione tabella CORSO
CREATE TABLE CORSO(
	CodiceCorso INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	Nome VARCHAR(15) NOT NULL,
	Descrizione VARCHAR(50),
	MaxPartecipanti INT NOT NULL,
--	NumLezioni INT,
	DataInizio DATE,
	DataCreazione TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
	CreatoDa INT,
	DataUltimaModifica TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
	UltimaModificaDa INT
);

--Creazione tabella AREA_TEMATICA
CREATE TABLE AREA_TEMATICA(
	CodiceCategoria INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	Categoria VARCHAR(16) NOT NULL,
	DataCreazione TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
	CreatoDa INT,
	DataUltimaModifica TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
	UltimaModificaDa INT
);

--Creazione tabella TEMATICA_CORSO
CREATE TABLE TEMATICA_CORSO(
	CodiceCategoria INT NOT NULL,
	CodiceCorso INT NOT NULL,
	FOREIGN KEY(CodiceCorso) REFERENCES CORSO(CodiceCorso),
	FOREIGN KEY(CodiceCategoria) REFERENCES AREA_TEMATICA(CodiceCategoria),
	UNIQUE(CodiceCategoria,CodiceCorso)
);

--Creazione tabella RESPONSABILE
CREATE TABLE RESPONSABILE(
	CodiceResponsabile INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	Nome VARCHAR(15) NOT NULL,
	Cognome VARCHAR(15) NOT NULL,
	LuogoNascita VARCHAR(15),
	DataNascita DATE,
	CodiceFiscale CHAR(16) NOT NULL,
	Username VARCHAR(16),
	Pwd VARCHAR(16)
);

--Creazione tabella STUDENTE
CREATE TABLE STUDENTE(
	Matricola CHAR(10) PRIMARY KEY,
	Nome VARCHAR(15) NOT NULL,
	Cognome VARCHAR(15) NOT NULL,
	LuogoNascita VARCHAR(15),
	DataNascita DATE,
	CodiceFiscale CHAR(16) NOT NULL
);

--Creazione tabella DOCENTE
CREATE TABLE DOCENTE(
	CodiceDocente INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	Nome VARCHAR(15) NOT NULL,
	Cognome VARCHAR(15) NOT NULL,
	LuogoNascita VARCHAR(15),
	DataNascita DATE,
	CodiceFiscale CHAR(16) NOT NULL
);

--Creazione tabella LEZIONE
CREATE TABLE LEZIONE (
	CodiceLezione INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	Titolo VARCHAR(16),
	Descrizione VARCHAR(32),
	Durata INTERVAL,
	DataOraInizio TIMESTAMP,
	CodiceCorso INT NOT NULL,
	CodiceDocente INT NOT NULL,
	FOREIGN KEY(CodiceCorso) REFERENCES CORSO(CodiceCorso),
	FOREIGN KEY(CodiceDocente) REFERENCES DOCENTE(CodiceDocente),
	UNIQUE(CodiceCorso,CodiceDocente)
);

--Creazione tabella PARTECIPARE
CREATE TABLE PARTECIPARE(
	Matricola CHAR(10) NOT NULL,
	CodiceLezione INT NOT NULL,
	FOREIGN KEY(Matricola) REFERENCES STUDENTE(Matricola),
	FOREIGN KEY(CodiceLezione) REFERENCES LEZIONE(CodiceLezione),
	UNIQUE (Matricola, CodiceLezione)
);

--Creazione tabella ISCRIZIONE
CREATE TABLE ISCRIZIONE(
	CodiceCorso INT,
	Matricola CHAR(10),
	FOREIGN KEY(CodiceCorso) REFERENCES CORSO(CodiceCorso),
	FOREIGN KEY(Matricola) REFERENCES STUDENTE(Matricola),
	UNIQUE(CodiceCorso,Matricola)
);
--funzioni
--scrivi con underscore
--popola le tabelle
CREATE OR REPLACE PROCEDURE ISCRIZIONE_CORSO_MATRICOLA(
	_CORSO INT,
	_MATRICOLA CHAR(10))
	LANGUAGE SQL AS
	$$
	INSERT INTO ISCRIZIONE (CodiceCorso, Matricola)
	VALUES (_CORSO, _MATRICOLA)
	ON CONFLICT DO NOTHING
	RETURNING 1 AS OP_RESULT
	$$;
--CALL ISCRIZIONE_CORSO_MATRICOLA(1,'1234567890')
	SELECT * FROM ISCRIZIONE


CREATE OR REPLACE PROCEDURE PARTECIPA_LEZIONE(
	_CORSO INT,
	_MATRICOLA CHAR(10))
	LANGUAGE SQL AS
	$$
	INSERT INTO ISCRIZIONE (CodiceCorso, Matricola)
	VALUES (_CORSO, _MATRICOLA)
	ON CONFLICT DO NOTHING
	RETURNING 1 AS OP_RESULT
	$$;







